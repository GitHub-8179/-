<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

     
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
          <!-- 配置流程引擎配置对象 -->
         <property name="jdbcDriver" value="com.mysql.jdbc.Driver"></property>
         <property name="jdbcUrl" value="jdbc:mysql://123.206.6.28:3306/activiti?useUnicode=true&amp;characterEncoding=utf-8"></property>
         <property name="jdbcUsername" value="root"></property>
         <property name="jdbcPassword" value="mysqlRoot"></property>
        <!-- 注入数据源信息 设置建表策略 -->
         <property name="databaseSchemaUpdate" value="true"></property>
<!--          <property name="jobExecutorActivate" value="false"/>
 -->	    
 		<property name="history" value="full"/>
        <!-- 配置事务管理器，统一事务 -->
        <property name="transactionManager" ref="transactionManager" />
        
         <!-- 组织机构适配  -->
<!--         <property name="organizationConnector"  ref="organizationAdapter" />
 -->    
 
 </bean>

 	 <!-- 组织机构适配实现  -->
<!--      <bean id="organizationAdapter" class="com.shine.workflow2.organization.impl.OrganizationAdapter" />
 -->     
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
     <!--工作流引擎 -->
  <!--   <bean id="processEngine" class="com.shine.workflow2.spring.ShineProcessEngineFactoryBean"> 
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean> -->
    
      <!--原生服务 -->
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />
	
	<!--扩展服务 -->
   <!--  <bean id="processDefinitionService" factory-bean="processEngine" factory-method="getProcessDefinitionService" />
    <bean id="processLogService" factory-bean="processEngine" factory-method="getProcessLogService" />
    <bean id="processManagementService" factory-bean="processEngine" factory-method="getProcessManagementService" />
   -->  
    <!-- 流程相关的Service -->
    <bean id="workflowService" class="com.activiti.impl.WorkflowServiceImpl">
        <property name="repositoryService" ref="repositoryService"></property>
        <property name="runtimeService" ref="runtimeService"></property>
        <property name="taskService" ref="taskService"></property>
        <property name="formService" ref="formService"></property>
        <property name="historyService" ref="historyService"></property>
    </bean>
    
    
<!--      
// 使用默认配置文件获取 ProcessEngine 对象实例
 ProcessEngine processEngine = 
 ProcessEngineConfiguration.createStandaloneProcessEngineConfiguration().\
 buildProcessEngine(); 
 // 通过 ProcessEngine 实例获得 RepositoryService 
 RepositoryService repositoryService = processEngine.getRepositoryService(); 
 // 通过 ProcessEngine 实例获得 RuntimeService 
 RuntimeService runtimeService = processEngine.getRuntimeService(); 
 // 通过 ProcessEngine 实例获得 TaskService 
 TaskService taskService = processEngine.getTaskService(); 
 HistoryService historyService = processEngine.getHistoryService(); 
 // 通过 ProcessEngine 实例获得 FormService 
 FormService formService = processEngine.getFormService(); 
 // 通过 ProcessEngine 实例获得 ManagementService 
 ManagementService managementService = processEngine.getManagementService(); 
 // 通过 ProcessEngine 实例获得 IdentityService 
 IdentityService identityService = processEngine.getIdentityService(); 
 
 -->
</beans>