<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.book.bookinfo.dao.BookInfoMapper">
  <resultMap id="BaseResultMap" type="com.book.bookinfo.bean.BookInfo">
    <id column="Book_ID" jdbcType="INTEGER" property="bookId" />
    <result column="book_Type" jdbcType="VARCHAR" property="bookType" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="Publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="Publish_year" jdbcType="VARCHAR" property="publishYear" />
    <result column="Author" jdbcType="VARCHAR" property="author" />
    <result column="Price" jdbcType="DOUBLE" property="price" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Book_ID, book_Type, book_name, Publisher, Publish_year, Author, Price, code, status
  </sql>
  <select id="selectByExample" parameterType="com.book.bookinfo.bean.BookInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_book_info
    where Book_ID = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="list">
    delete from p_book_info
    <where>
    	Book_ID in 
     	<foreach collection="bookIds" item="id" index="index" separator="," open="(" close=")">  
	        #{id} 
	    </foreach> 
    </where>
  </delete>
  <delete id="deleteByExample" parameterType="com.book.bookinfo.bean.BookInfoExample">
    delete from p_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.book.bookinfo.bean.BookInfo">
    insert into p_book_info (Book_ID, book_Type, book_name, 
      Publisher, Publish_year, Author, 
      Price, code, status)
    values (#{bookId,jdbcType=INTEGER}, #{bookType,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{publishYear,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{code,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.book.bookinfo.bean.BookInfo" useGeneratedKeys="true"
    keyProperty="bookId">
    insert into p_book_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        Book_ID,
      </if>
      <if test="bookType != null">
        book_Type,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="publisher != null">
        Publisher,
      </if>
      <if test="publishYear != null">
        Publish_year,
      </if>
      <if test="author != null">
        Author,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookType != null">
        #{bookType,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publishYear != null">
        #{publishYear,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.book.bookinfo.bean.BookInfoExample" resultType="java.lang.Long">
    select count(*) from p_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_book_info
    <set>
      <if test="record.bookId != null">
        Book_ID = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookType != null">
        book_Type = #{record.bookType,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        Publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.publishYear != null">
        Publish_year = #{record.publishYear,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        Author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        Price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_book_info
    set Book_ID = #{record.bookId,jdbcType=INTEGER},
      book_Type = #{record.bookType,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      Publisher = #{record.publisher,jdbcType=VARCHAR},
      Publish_year = #{record.publishYear,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      Price = #{record.price,jdbcType=DOUBLE},
      code = #{record.code,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.bookinfo.bean.BookInfo">
    update p_book_info
    <set>
      <if test="bookType != null">
        book_Type = #{bookType,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        Publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publishYear != null">
        Publish_year = #{publishYear,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        Author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where Book_ID = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.bookinfo.bean.BookInfo">
    update p_book_info
    set book_Type = #{bookType,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      Publisher = #{publisher,jdbcType=VARCHAR},
      Publish_year = #{publishYear,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      Price = #{price,jdbcType=DOUBLE},
      code = #{code,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where Book_ID = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>