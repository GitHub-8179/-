<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.book.manage.dao.ManageInfoMapper">
  <resultMap id="BaseResultMap" type="com.book.manage.bean.ManageInfo">
    <id column="admin_ID" jdbcType="INTEGER" property="adminId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="EFFECT_TIME" jdbcType="VARCHAR" property="effectTime" />
    <result column="FAIL_TIME" jdbcType="VARCHAR" property="failTime" /><!-- TIMESTAMP -->
    <result column="IS_VALID" jdbcType="VARCHAR" property="isValid" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="department" jdbcType="VARCHAR" property="department" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    admin_ID, NAME, PASSWORD, EFFECT_TIME, FAIL_TIME, IS_VALID, gender, phone, email, 
    department
  </sql>
  <select id="selectByExample" parameterType="com.book.manage.bean.ManageInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
	admin_ID, NAME, date_format( EFFECT_TIME,'%Y-%m-%d %H:%i:%s') EFFECT_TIME,date_format( FAIL_TIME,'%Y-%m-%d %H:%i:%s') FAIL_TIME , IS_VALID, gender, phone, email, 
    department    from s_admin_inof
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_admin_inof
    where admin_ID = #{adminId,jdbcType=INTEGER}
  </select>
  
    <select id="loginVerify" parameterType="String" resultMap="BaseResultMap">
    select 
    admin_ID, NAME,  EFFECT_TIME, FAIL_TIME, IS_VALID, gender, phone, email,department
    from s_admin_inof
    where NAME = #{logname,jdbcType=VARCHAR} and PASSWORD = #{logpass,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="list">
    delete from s_admin_inof
    <where>
    admin_ID in 
	    <foreach collection="adminIds" item="id" index="index" separator="," open="(" close=")">  
	        #{id} 
	    </foreach> 
    </where>
  </delete>
  <delete id="deleteByExample" parameterType="com.book.manage.bean.ManageInfoExample">
    delete from s_admin_inof
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.book.manage.bean.ManageInfo" useGeneratedKeys="true"
    keyProperty="adminId">
    insert into s_admin_inof ( NAME, PASSWORD, 
      EFFECT_TIME, FAIL_TIME, IS_VALID, 
      gender, phone, email, 
      department)
    values ( #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{effectTime,jdbcType=TIMESTAMP}, #{failTime,jdbcType=TIMESTAMP}, #{isValid,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.book.manage.bean.ManageInfo" useGeneratedKeys="true"
    keyProperty="adminId">
    insert into s_admin_inof
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null and name!='' ">
        NAME,
      </if>
      <if test="password != null and password!='' ">
        PASSWORD,
      </if>
      <if test="effectTime != null and effectTime!='' ">
        EFFECT_TIME,
      </if>
      <if test="failTime != null and failTime!='' ">
        FAIL_TIME,
      </if>
      <if test="isValid != null and isValid !='' ">
        IS_VALID,
      </if>
      <if test="gender != null and gender !='' ">
        gender,
      </if>
      <if test="phone != null and phone !='' ">
        phone,
      </if>
      <if test="email != null and email !='' ">
        email,
      </if>
      <if test="department != null and department !='' ">
        department,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null and name !='' ">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password !='' ">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="effectTime != null and effectTime !='' ">
        #{effectTime,jdbcType=VARCHAR},
      </if>
      <if test="failTime != null and failTime !='' ">
        #{failTime,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null and isValid !='' ">
        #{isValid,jdbcType=VARCHAR},
      </if>
      <if test="gender != null and gender !='' ">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone !='' ">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email !='' ">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="department != null and department !='' ">
        #{department,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.book.manage.bean.ManageInfoExample" resultType="java.lang.Long">
    select count(*) from s_admin_inof
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_admin_inof
    <set>
      <if test="record.adminId != null">
        admin_ID = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.effectTime != null">
        EFFECT_TIME = #{record.effectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.failTime != null">
        FAIL_TIME = #{record.failTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isValid != null">
        IS_VALID = #{record.isValid,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_admin_inof
    set admin_ID = #{record.adminId,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      EFFECT_TIME = #{record.effectTime,jdbcType=TIMESTAMP},
      FAIL_TIME = #{record.failTime,jdbcType=TIMESTAMP},
      IS_VALID = #{record.isValid,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.manage.bean.ManageInfo">
    update s_admin_inof
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="effectTime != null">
        EFFECT_TIME = #{effectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failTime != null">
        FAIL_TIME = #{failTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        IS_VALID = #{isValid,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
    </set>
    where admin_ID = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.manage.bean.ManageInfo">
    update s_admin_inof
    set NAME = #{name,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      EFFECT_TIME = #{effectTime,jdbcType=TIMESTAMP},
      FAIL_TIME = #{failTime,jdbcType=TIMESTAMP},
      IS_VALID = #{isValid,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR}
    where admin_ID = #{adminId,jdbcType=INTEGER}
  </update>
</mapper>